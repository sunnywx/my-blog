{"version":3,"sources":["webpack:///../node_modules/marked/lib/marked.esm.js","webpack:///./routes/blog-detail/comment.tsx","webpack:///./routes/blog-detail/index.scss","webpack:///./routes/blog-detail/index.tsx","webpack:///../node_modules/dayjs/dayjs.min.js"],"names":["getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","escape","html","encode","escapeTest","test","replace","escapeReplace","getEscapeReplacement","escapeTestNoEncode","escapeReplaceNoEncode","unescape","unescapeTest","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","edit","regex","opt","source","obj","name","val","caret","getRegex","RegExp","cleanUrl","base","href","prot","decodeURIComponent","nonWordAndColonTest","e","indexOf","originIndependentUrl","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","merge","target","key","i","arguments","length","Object","prototype","hasOwnProperty","call","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","split","trim","shift","pop","splice","push","c","invert","l","suffLen","currChar","slice","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","type","tokens","inlineTokens","ch","out","charCodeAt","Math","random","toString","marked","src","callback","onError","message","Error","defaults","Lexer","lex","done","err","Parser","parse","pending","setTimeout","lang","code","Promise","all","then","catch","escapeReplacements","noopTest","exec","Tokenizer","options","this","rules","block","newline","codeBlockStyle","fences","matchIndentToCode","indentToCode","map","node","matchIndentInNode","join","indentCodeCompensation","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","top","spacers","filter","t","hasMultipleLineBreaks","every","lineBreaks","pre","def","tag","table","item","header","align","rows","j","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","level","findClosingBracket","linkLen","_escapes","links","reflink","nolink","maskedSrc","prevChar","emStrong","lDelim","nextChar","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","create","inlineQueue","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","repeat","some","extTokenizer","space","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","keepPrevChar","keys","includes","lastIndexOf","codespan","startInline","inlineText","Renderer","infostring","quote","slugger","id","slug","body","content","flags","TextRenderer","Slugger","seen","value","originalSlug","isDryRun","occurenceAccumulator","serialize","getNextSafeSlug","dryrun","textRenderer","l2","l3","cell","itemBody","checkbox","ret","renderers","parser","parseInline","tablecell","tablerow","unshift","listitem","image","setOptions","use","args","hasExtensions","opts","childTokens","pack","ext","prevRenderer","apply","prop","prevTokenizer","values","concat","lexInline","Comment","useEffect","rendered","gitalkOptions","clientID","clientSecret","repo","owner","admin","distractionFreeMode","tm","setInterval","window","Gitalk","render","clearInterval","BlogDetail","props","usePrerenderData","data","loading","ids","useContext","AppCtx","pageIds","blogUrl","date","endsWith","blogIdx","findIndex","v","u","document","prev","parsed","className","style","wrap","tags","day","format","article","dangerouslySetInnerHTML","__html","pager","r","s","a","o","f","h","d","$","y","M","weekdays","months","m","Array","g","z","utcOffset","abs","floor","year","month","clone","add","ceil","p","w","D","ms","Q","S","O","locale","$L","utc","$u","x","$x","$offset","$d","Date","NaN","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","isSame","startOf","endOf","isAfter","isBefore","$g","set","unix","valueOf","getTime","toDate","$locale","weekStart","$set","daysInMonth","get","Number","round","subtract","invalidDate","meridiem","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","ddd","weekdaysShort","dddd","H","HH","hh","A","mm","ss","SSS","Z","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","T","extend","$i","isDayjs","en","Ls","exports","module","define"],"mappings":"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","file":"route-blog-detail.chunk.35be0.js","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n        const hasMultipleLineBreaks = spacers.every(t => {\n          const chars = t.raw.split('');\n          let lineBreaks = 0;\n          for (const char of chars) {\n            if (char === '\\n') {\n              lineBreaks += 1;\n            }\n            if (lineBreaks > 1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n          // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = src.slice(1, lLength + match.index + rLength);\n          return {\n            type: 'em',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = src.slice(2, lLength + match.index + rLength - 1);\n        return {\n          type: 'strong',\n          raw: src.slice(0, lLength + match.index + rLength + 1),\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\ninline.escapedEmSt = /\\\\\\*|\\\\_/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  function onError(e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      if (opt.async) {\n        return Promise.all(marked.walkTokens(tokens, opt.walkTokens))\n          .then(() => {\n            return Parser.parse(tokens, opt);\n          })\n          .catch(onError);\n      }\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    onError(e);\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const opts = merge({}, ...args);\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n  let hasExtensions;\n\n  args.forEach((pack) => {\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      hasExtensions = true;\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    if (hasExtensions) {\n      opts.extensions = extensions;\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import {h} from 'preact'\nimport {useEffect} from \"preact/hooks\";\n\ntype Props = {\n  className?: string;\n  id: string;\n  title: string;\n}\n\nconst elemId='gitalk-container'\n\nfunction Comment({id, title}: Props) {\n  useEffect(()=> {\n    // gitalk flag\n    let rendered=false\n\n    const gitalkOptions = {\n      clientID: \"e6529ed76f49a1c63227\",\n      clientSecret: \"105ae6c9c257d966e42020b5babd8d11b4b35fb6\",\n      repo: \"sunnywx.github.io\",\n      owner: \"sunnywx\",\n      admin: [\"sunnywx\"],\n      id,\n      title,\n      distractionFreeMode: false,\n    }\n\n    let tm: any =setInterval(()=> {\n      if(window.Gitalk && !rendered){\n        rendered=true\n        const gitalk = new window.Gitalk(gitalkOptions)\n        gitalk.render(elemId)\n\n        clearInterval(tm)\n        tm=null\n      }\n    }, 100)\n\n    return ()=> {\n      clearInterval(tm)\n      tm=null\n    }\n  }, [id, title])\n\n  return (\n    <div id='gitalk-container' />\n  );\n}\n\nexport default Comment;","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"wrap__VyOVO\",\"header\":\"header__dNwEz\",\"pager\":\"pager__T39MM\"};","import {h} from 'preact'\nimport {useEffect, useContext} from 'preact/hooks'\nimport {usePrerenderData} from '@preact/prerender-data-provider'\nimport {marked} from 'marked'\nimport day from 'dayjs'\nimport {AppCtx} from \"../../store/app-state\";\nimport Comment from \"./comment\";\n\nimport style from './index.scss'\nimport {VscArrowLeft, VscArrowRight, VscInfo, VscTag} from \"react-icons/vsc\";\n\ntype Props = {\n  className?: string;\n  date: string;\n  slug?: string;\n}\n\ndeclare global {\n  interface Window {\n    Gitalk: any\n  }\n}\n\nfunction normalizeUrl(url: string){\n  if(!url) return ''\n  if(url.endsWith('/')) return url.slice(0, -1)\n  return url\n}\n\nfunction BlogDetail(props: Props) {\n  const [data, loading, error] = usePrerenderData(props);\n  const {pageIds}=useContext(AppCtx)\n\n  const ids=pageIds.value\n  const blogUrl=normalizeUrl(['/blog', props.date, props.slug].join('/'))\n  const blogIdx=ids.findIndex(v=> v.u === blogUrl)\n  const title=ids[blogIdx]?.t\n\n  useEffect(()=> {\n    if(title){\n      document.title = `${title} | sunnywang`\n    }\n  }, [blogIdx, ids, props.slug])\n\n  if (loading) return <p>Loading...</p>;\n\n  if (error) return <p>Error: {error.message}</p>;\n\n  const parsed=marked.parse(data.content)\n\n  let prev, next;\n  if(ids.length > 1){\n    if(blogIdx > 0 && blogIdx < ids.length - 1){\n      prev=ids[blogIdx - 1]\n      next=ids[blogIdx + 1]\n    }\n    if(blogIdx === 0){\n      next=ids[blogIdx + 1]\n    }\n    if(blogIdx === ids.length - 1) {\n      prev=ids[blogIdx - 1]\n    }\n  }\n\n  return (\n    <div className={style.wrap}>\n      <div className={style.header}>\n        <h1>{title}</h1>\n        <div>\n          <div>\n            <span><VscTag /></span>\n            {(data.tags || []).map(t=> {\n              return (\n                <a key={t} href={`/tags/${t}`}>{t}</a>\n              )\n            })}\n          </div>\n          <span><VscInfo /> {day(data.date).format('YYYY-MM-DD')}</span>\n        </div>\n      </div>\n      <div className={style.article} dangerouslySetInnerHTML={{__html: parsed}} />\n      <div className={style.pager}>\n        {prev && (\n          <a href={prev.u}><VscArrowLeft /> {prev.t}</a>\n        )}\n        {next && (\n          <a href={next.u}>{next.t} <VscArrowRight /></a>\n        )}\n      </div>\n      <Comment id={blogUrl} title={title} />\n    </div>\n  );\n}\n\nexport default BlogDetail;","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",f=\"month\",h=\"quarter\",c=\"year\",d=\"date\",$=\"Invalid Date\",l=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},g={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},v=\"en\",D={};D[v]=M;var p=function(t){return t instanceof _},S=function t(e,n,r){var i;if(!e)return v;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(v=i),i||!r&&v},w=function(t,e){if(p(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=g;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match(l);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===$)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),$=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},l=function(t,e){return O.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,g=\"set\"+(this.$u?\"UTC\":\"\");switch(h){case c:return r?$(1,0):$(31,11);case f:return r?$(1,M):$(0,M+1);case o:var v=this.$locale().weekStart||0,D=(y<v?y+7:y)-v;return $(r?m-D:m+(6-D),M);case a:case d:return l(g+\"Hours\",0);case u:return l(g+\"Minutes\",1);case s:return l(g+\"Seconds\",2);case i:return l(g+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h=\"set\"+(this.$u?\"UTC\":\"\"),$=(n={},n[a]=h+\"Date\",n[d]=h+\"Date\",n[f]=h+\"Month\",n[c]=h+\"FullYear\",n[u]=h+\"Hours\",n[s]=h+\"Minutes\",n[i]=h+\"Seconds\",n[r]=h+\"Milliseconds\",n)[o],l=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[$](l),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else $&&this.$d[$](l);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,$=this;r=Number(r);var l=O.p(h),y=function(t){var e=w($);return O.w(e.date(e.date()+Math.round(t*r)),$)};if(l===f)return this.set(f,this.$M+r);if(l===c)return this.set(c,this.$y+r);if(l===a)return y(1);if(l===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[l]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||$;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},c=function(t){return O.s(s%12||12,t,\"0\")},d=n.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,\"0\"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,\"0\"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,\"0\"),s:String(this.$s),ss:O.s(this.$s,2,\"0\"),SSS:O.s(this.$ms,3,\"0\"),Z:i};return r.replace(y,(function(t,e){return e||l[t]||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,$){var l,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,g=this-M,v=O.m(this,M);return v=(l={},l[c]=v/12,l[f]=v,l[h]=v/3,l[o]=(g-m)/6048e5,l[a]=(g-m)/864e5,l[u]=g/n,l[s]=g/e,l[i]=g/t,l)[y]||g,$?v:O.a(v)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),T=_.prototype;return w.prototype=T,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",f],[\"$y\",c],[\"$D\",d]].forEach((function(t){T[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=D[v],w.Ls=D,w.p={},w}));"],"sourceRoot":""}