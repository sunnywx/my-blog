{"version":3,"sources":["webpack:///../node_modules/marked/lib/marked.esm.js","webpack:///./routes/blog-detail/comment.tsx","webpack:///./routes/blog-detail/index.scss","webpack:///./routes/blog-detail/index.tsx","webpack:///../node_modules/dayjs/dayjs.min.js"],"names":["getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartypants","tokenizer","walkTokens","xhtml","escape","html","encode","escapeTest","test","replace","escapeReplace","getEscapeReplacement","escapeTestNoEncode","escapeReplaceNoEncode","unescape","unescapeTest","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","edit","regex","opt","source","obj","name","val","caret","getRegex","RegExp","cleanUrl","base","href","prot","decodeURIComponent","nonWordAndColonTest","e","indexOf","originIndependentUrl","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","merge","target","key","i","arguments","length","Object","prototype","hasOwnProperty","call","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","split","trim","shift","pop","splice","push","c","invert","l","suffLen","currChar","slice","checkSanitizeDeprecation","console","warn","repeatString","pattern","result","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","type","tokens","inlineTokens","ch","out","charCodeAt","Math","random","toString","marked","src","callback","onError","message","Error","defaults","Lexer","lex","done","err","Parser","parse","pending","setTimeout","lang","code","Promise","all","then","catch","escapeReplacements","noopTest","exec","Tokenizer","constructor","options","this","space","rules","block","newline","codeBlockStyle","fences","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","indentCodeCompensation","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","min","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","top","spacers","filter","t","hasMultipleLineBreaks","every","chars","lineBreaks","char","pre","def","tag","table","item","header","align","rows","j","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","level","findClosingBracket","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","create","inlineQueue","static","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","repeat","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","keepPrevChar","keys","includes","lastIndexOf","startInline","Renderer","infostring","quote","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","value","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","textRenderer","parseInline","l2","l3","cell","itemBody","ret","renderers","parser","unshift","setOptions","use","args","opts","childTokens","hasExtensions","pack","ext","prevRenderer","apply","prop","prevTokenizer","values","concat","lexInline","Comment","id","useEffect","rendered","gitalkOptions","clientID","clientSecret","repo","owner","admin","distractionFreeMode","tm","setInterval","window","Gitalk","render","clearInterval","BlogDetail","props","data","loading","usePrerenderData","pageIds","useContext","AppCtx","ids","blogUrl","date","endsWith","blogIdx","findIndex","v","u","document","parsed","prev","className","style","wrap","tags","day","format","article","dangerouslySetInnerHTML","__html","pager","module","exports","r","s","a","o","f","h","d","$","y","M","weekdays","months","m","Array","g","z","utcOffset","abs","floor","year","month","clone","add","ceil","p","w","D","ms","Q","S","O","locale","$L","utc","$u","x","$x","$offset","$d","Date","NaN","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","isSame","startOf","endOf","isAfter","isBefore","$g","set","unix","valueOf","getTime","toDate","$locale","weekStart","$set","daysInMonth","get","Number","round","subtract","invalidDate","meridiem","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","ddd","weekdaysShort","dddd","H","HH","hh","A","mm","ss","SSS","Z","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","T","extend","$i","isDayjs","en","Ls"],"mappings":"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","file":"route-blog-detail.chunk.7ec2a.esm.js","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n        const hasMultipleLineBreaks = spacers.every(t => {\n          const chars = t.raw.split('');\n          let lineBreaks = 0;\n          for (const char of chars) {\n            if (char === '\\n') {\n              lineBreaks += 1;\n            }\n            if (lineBreaks > 1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n          // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = src.slice(1, lLength + match.index + rLength);\n          return {\n            type: 'em',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = src.slice(2, lLength + match.index + rLength - 1);\n        return {\n          type: 'strong',\n          raw: src.slice(0, lLength + match.index + rLength + 1),\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\ninline.escapedEmSt = /\\\\\\*|\\\\_/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  function onError(e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      if (opt.async) {\n        return Promise.all(marked.walkTokens(tokens, opt.walkTokens))\n          .then(() => {\n            return Parser.parse(tokens, opt);\n          })\n          .catch(onError);\n      }\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    onError(e);\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const opts = merge({}, ...args);\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n  let hasExtensions;\n\n  args.forEach((pack) => {\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      hasExtensions = true;\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    if (hasExtensions) {\n      opts.extensions = extensions;\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n","import {h} from 'preact'\nimport {useEffect} from \"preact/hooks\";\n\ntype Props = {\n  className?: string;\n  id: string;\n  title: string;\n}\n\nconst elemId='gitalk-container'\n\nfunction Comment({id, title}: Props) {\n  useEffect(()=> {\n    // gitalk flag\n    let rendered=false\n\n    const gitalkOptions = {\n      clientID: \"e6529ed76f49a1c63227\",\n      clientSecret: \"105ae6c9c257d966e42020b5babd8d11b4b35fb6\",\n      repo: \"sunnywx.github.io\",\n      owner: \"sunnywx\",\n      admin: [\"sunnywx\"],\n      id,\n      title,\n      distractionFreeMode: false,\n    }\n\n    let tm: any =setInterval(()=> {\n      if(window.Gitalk && !rendered){\n        rendered=true\n        const gitalk = new window.Gitalk(gitalkOptions)\n        gitalk.render(elemId)\n\n        clearInterval(tm)\n        tm=null\n      }\n    }, 100)\n\n    return ()=> {\n      clearInterval(tm)\n      tm=null\n    }\n  }, [id, title])\n\n  return (\n    <div id='gitalk-container' />\n  );\n}\n\nexport default Comment;","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"wrap__VyOVO\",\"header\":\"header__dNwEz\",\"pager\":\"pager__T39MM\"};","import {h} from 'preact'\nimport {useEffect, useContext} from 'preact/hooks'\nimport {usePrerenderData} from '@preact/prerender-data-provider'\nimport {marked} from 'marked'\nimport day from 'dayjs'\nimport {AppCtx} from \"../../store/app-state\";\nimport Comment from \"./comment\";\n\nimport style from './index.scss'\nimport {VscArrowLeft, VscArrowRight, VscInfo, VscTag} from \"react-icons/vsc\";\n\ntype Props = {\n  className?: string;\n  date: string;\n  slug?: string;\n}\n\ndeclare global {\n  interface Window {\n    Gitalk: any\n  }\n}\n\nfunction normalizeUrl(url: string){\n  if(!url) return ''\n  if(url.endsWith('/')) return url.slice(0, -1)\n  return url\n}\n\nfunction BlogDetail(props: Props) {\n  const [data, loading, error] = usePrerenderData(props);\n  const {pageIds}=useContext(AppCtx)\n\n  const ids=pageIds.value\n  const blogUrl=normalizeUrl(['/blog', props.date, props.slug].join('/'))\n  const blogIdx=ids.findIndex(v=> v.u === blogUrl)\n  const title=ids[blogIdx]?.t\n\n  useEffect(()=> {\n    if(title){\n      document.title = `${title} | sunnywang`\n    }\n  }, [blogIdx, ids, props.slug])\n\n  if (loading) return <p>Loading...</p>;\n\n  if (error) return <p>Error: {error.message}</p>;\n\n  const parsed=marked.parse(data.content)\n\n  let prev, next;\n  if(ids.length > 1){\n    if(blogIdx > 0 && blogIdx < ids.length - 1){\n      prev=ids[blogIdx - 1]\n      next=ids[blogIdx + 1]\n    }\n    if(blogIdx === 0){\n      next=ids[blogIdx + 1]\n    }\n    if(blogIdx === ids.length - 1) {\n      prev=ids[blogIdx - 1]\n    }\n  }\n\n  return (\n    <div className={style.wrap}>\n      <div className={style.header}>\n        <h1>{title}</h1>\n        <div>\n          <div>\n            <span><VscTag /></span>\n            {(data.tags || []).map(t=> {\n              return (\n                <a key={t} href={`/tags/${t}`}>{t}</a>\n              )\n            })}\n          </div>\n          <span><VscInfo /> {day(data.date).format('YYYY-MM-DD')}</span>\n        </div>\n      </div>\n      <div className={style.article} dangerouslySetInnerHTML={{__html: parsed}} />\n      <div className={style.pager}>\n        {prev && (\n          <a href={prev.u}><VscArrowLeft /> {prev.t}</a>\n        )}\n        {next && (\n          <a href={next.u}>{next.t} <VscArrowRight /></a>\n        )}\n      </div>\n      <Comment id={blogUrl} title={title} />\n    </div>\n  );\n}\n\nexport default BlogDetail;","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",f=\"month\",h=\"quarter\",c=\"year\",d=\"date\",$=\"Invalid Date\",l=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[Tt\\s]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},g={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},v=\"en\",D={};D[v]=M;var p=function(t){return t instanceof _},S=function t(e,n,r){var i;if(!e)return v;if(\"string\"==typeof e){var s=e.toLowerCase();D[s]&&(i=s),n&&(D[s]=n,i=s);var u=e.split(\"-\");if(!i&&u.length>1)return t(u[0])}else{var a=e.name;D[a]=e,i=a}return!r&&i&&(v=i),i||!r&&v},w=function(t,e){if(p(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=g;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match(l);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===$)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),$=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},l=function(t,e){return O.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,g=\"set\"+(this.$u?\"UTC\":\"\");switch(h){case c:return r?$(1,0):$(31,11);case f:return r?$(1,M):$(0,M+1);case o:var v=this.$locale().weekStart||0,D=(y<v?y+7:y)-v;return $(r?m-D:m+(6-D),M);case a:case d:return l(g+\"Hours\",0);case u:return l(g+\"Minutes\",1);case s:return l(g+\"Seconds\",2);case i:return l(g+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h=\"set\"+(this.$u?\"UTC\":\"\"),$=(n={},n[a]=h+\"Date\",n[d]=h+\"Date\",n[f]=h+\"Month\",n[c]=h+\"FullYear\",n[u]=h+\"Hours\",n[s]=h+\"Minutes\",n[i]=h+\"Seconds\",n[r]=h+\"Milliseconds\",n)[o],l=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[$](l),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else $&&this.$d[$](l);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,$=this;r=Number(r);var l=O.p(h),y=function(t){var e=w($);return O.w(e.date(e.date()+Math.round(t*r)),$)};if(l===f)return this.set(f,this.$M+r);if(l===c)return this.set(c,this.$y+r);if(l===a)return y(1);if(l===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[l]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this,n=this.$locale();if(!this.isValid())return n.invalidDate||$;var r=t||\"YYYY-MM-DDTHH:mm:ssZ\",i=O.z(this),s=this.$H,u=this.$m,a=this.$M,o=n.weekdays,f=n.months,h=function(t,n,i,s){return t&&(t[n]||t(e,r))||i[n].slice(0,s)},c=function(t){return O.s(s%12||12,t,\"0\")},d=n.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,\"0\"),MMM:h(n.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(n.weekdaysMin,this.$W,o,2),ddd:h(n.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,\"0\"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,\"0\"),s:String(this.$s),ss:O.s(this.$s,2,\"0\"),SSS:O.s(this.$ms,3,\"0\"),Z:i};return r.replace(y,(function(t,e){return e||l[t]||i.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,$){var l,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,g=this-M,v=O.m(this,M);return v=(l={},l[c]=v/12,l[f]=v,l[h]=v/3,l[o]=(g-m)/6048e5,l[a]=(g-m)/864e5,l[u]=g/n,l[s]=g/e,l[i]=g/t,l)[y]||g,$?v:O.a(v)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return D[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),T=_.prototype;return w.prototype=T,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",f],[\"$y\",c],[\"$D\",d]].forEach((function(t){T[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=D[v],w.Ls=D,w.p={},w}));"],"sourceRoot":""}