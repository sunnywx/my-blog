[
  {
    "url": "/blog/2022-10/reduce-gitalk-bundle",
    "title": "优化打包gitalk",
    "date": "2022-10-19",
    "desc": "lazy load\n评论插件gitalk的react组件体积比较大 (~700K), 直接静态import会导致某个chunk的体积很大。\n尝试使用lazy, Suspense来主动分包。\nimport &quot;gitalk/dist/gitalk.css&quot;\nconst Gitalk=..."
  },
  {
    "url": "/blog/2022-10/ways-to-run-jsx-in-node",
    "title": "ways to run jsx in nodejs",
    "date": "2022-10-17",
    "desc": "如何在nodejs repl下运行下面的代码：\n// ssr.js\n\n/** @jsx h */\nimport {render} from &#39;preact-render-to-string&#39;\nimport {h} from &#39;preact&#39;\n\nconst App=&l..."
  },
  {
    "url": "/blog/2022-10/free-site-host",
    "title": "free site host",
    "date": "2022-10-13",
    "desc": "github page\nnetlify\nvercel page\ncloudflare page\nsurge.sh\n"
  },
  {
    "url": "/blog/2022-10/react-different-render-ways",
    "title": "react different render ways",
    "date": "2022-10-13",
    "desc": "render\nhydrate\npre-render\nssr\nssg (static export)\n"
  },
  {
    "url": "/blog/2020-10/js-wasm-fibonacci-compare",
    "title": "javascript vs webassembly fibonacci benchmark",
    "date": "2020-10-14",
    "desc": "\nRust 环境准备\n我准备用rust来编译到wasm，当然你也可以用 c/c++, go, assemblyScript/typescript 来 compile 到 wasm.\n首选准备 rust 环境，安装rustup\ncurl --proto &#39;=https&#39; --tlsv1..."
  }
]